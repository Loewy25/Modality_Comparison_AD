#!/bin/bash

echo "Starting SLURM job submission debugging script..."

# 1. Check Disk Space Usage
echo -e "\n=== Disk Space Usage ==="
df -h ~

# 2. Check Disk Quota
echo -e "\n=== Disk Quota ==="
quota -s

# 3. Identify Large Files and Directories in Home Directory
echo -e "\n=== Top 20 Largest Files/Directories in Home Directory ==="
du -ah ~ | sort -rh | head -n 20

# 4. Test Write Permissions in Home Directory
echo -e "\n=== Testing Write Permissions in Home Directory ==="
touch ~/test_write_permission_file 2>/dev/null
if [ -f ~/test_write_permission_file ]; then
    echo "Write permission test successful."
    rm ~/test_write_permission_file
else
    echo "Write permission test failed."
fi

# 5. Check for Read-Only Filesystem
echo -e "\n=== Checking if Filesystem is Read-Only ==="
mount_point=$(df ~ | tail -1 | awk '{print $6}')
mount | grep "on $mount_point " | grep -q "ro,"
if [ $? -eq 0 ]; then
    echo "Filesystem is mounted as read-only."
else
    echo "Filesystem is writable."
fi

# 6. Attempt to Submit a Simple Test SLURM Job
echo -e "\n=== Attempting to Submit a Simple Test SLURM Job ==="
echo "#!/bin/bash
#SBATCH --job-name=debug_test_job
#SBATCH --output=debug_test_job.out
#SBATCH --error=debug_test_job.err
#SBATCH --time=00:05:00
#SBATCH --partition=short

echo \"Test job running on \$(hostname)\"
sleep 30
" > debug_test_job.sh

sbatch_output=$(sbatch debug_test_job.sh 2>&1)
echo "$sbatch_output"
job_id=$(echo "$sbatch_output" | grep -oE '[0-9]+')

if [[ "$sbatch_output" == *"Submitted batch job"* ]]; then
    echo "Test job submitted successfully with Job ID: $job_id"
else
    echo "Failed to submit test job."
fi

# 7. Check Module Availability
echo -e "\n=== Checking Module Availability ==="
module list 2>&1

echo -e "\nIf any of the above steps indicate issues, please address them accordingly or contact your system administrator for assistance."

echo "Debugging script completed."
